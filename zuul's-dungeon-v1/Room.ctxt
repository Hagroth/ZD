#BlueJ class context
comment0.params=name\ description
comment0.target=Room(java.lang.String,\ java.lang.String)
comment0.text=\r\n\ Create\ a\ room\ named\ "name"\ and\ described\ "description".\ \r\n\ The\ name\ is\ only\ used\ internally\ by\ the\ program.\ Initially,\r\n\ it\ has\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ name\ The\ room's\ name.\r\n\ @param\ description\ The\ room's\ description.\r\n
comment1.params=direction\ neighbour\ unlocked\ key
comment1.target=void\ setExit(java.lang.String,\ Room,\ boolean,\ Item)
comment1.text=\r\n\ Define\ an\ exit\ from\ this\ room.\ Also\ creates\ the\ exit\r\n\ object\ and\ sets\ it\ to\ defined\ lock\ status.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbour\ The\ room\ in\ the\ given\ direction.\r\n\ @param\ unlocked\ The\ lock\ status\ of\ the\ exit.\r\n
comment10.params=
comment10.target=java.lang.String\ getName()
comment10.text=\r\n\ Return\ the\ name\ of\ the\ room.\r\n\ @return\ The\ name\ of\ the\ room.\r\n
comment11.params=
comment11.target=java.lang.String\ getDescription()
comment11.text=\r\n\ Return\ the\ description\ of\ the\ room.\r\n\ @return\ The\ description\ of\ the\ room.\r\n
comment12.params=
comment12.target=java.lang.String\ getLongDescription()
comment12.text=\r\n\ Return\ a\ long\ description\ of\ this\ room,\ of\ the\ form\:\r\n\ \ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ description\ of\ the\ room,\ including\ exits.\r\n
comment2.params=item
comment2.target=void\ addItem(Item)
comment2.text=\r\n\ Place\ an\ item\ in\ this\ room.\r\n\ @param\ item\ The\ item\ to\ be\ placed.\r\n
comment3.params=name
comment3.target=void\ removeItem(java.lang.String)
comment3.text=\r\n\ Remove\ an\ item\ from\ this\ room.\r\n\ @param\ name\ The\ name\ of\ the\ item\ to\ be\ removed.\r\n
comment4.params=name
comment4.target=Item\ getItem(java.lang.String)
comment4.text=\r\n\ Return\ item\ whose\ name\ is\ "name".\ If\ not\ found,\r\n\ return\ null.\r\n\ @param\ name\ The\ name\ to\ look\ for.\r\n\ @return\ The\ item\ whose\ name\ is\ "name".\r\n
comment5.params=direction
comment5.target=Exit\ getExit(java.lang.String)
comment5.text=\r\n\ Return\ the\ exit\ in\ specified\ direction.\r\n\ Return\ null\ if\ there\ is\ no\ exit.\r\n\ @return\ The\ exit\ in\ specified\ direction.\r\n
comment6.params=
comment6.target=java.util.ArrayList\ getNeighbours()
comment6.text=\r\n\ Return\ all\ neighbours.\r\n\ @return\ The\ neighbours\ as\ an\ ArrayList.\r\n
comment7.params=
comment7.target=java.lang.String\ getExitString()
comment7.text=\r\n\ Return\ a\ string\ listing\ all\ exits.\r\n\ @return\ A\ string\ listing\ all\ exits.\r\n
comment8.params=
comment8.target=java.lang.String\ getItemsString()
comment8.text=\r\n\ Return\ a\ string\ listing\ all\ items.\r\n\ @return\ A\ string\ listing\ all\ items.\r\n
comment9.params=key
comment9.target=Exit\ lookForExit(Item)
comment9.text=\r\n\ Check\ whether\ key\ works\ in\ current\ room.\r\n\ @param\ key\ Key\ to\ compare\ with\ exits.\r\n\ @return\ The\ room\ the\ exit\ leads\ to.\ Otherwise,\r\n\ return\ null.\r\n
numComments=13
